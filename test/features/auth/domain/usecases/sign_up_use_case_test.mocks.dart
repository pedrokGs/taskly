// Mocks generated by Mockito 5.4.6 from annotations
// in taskly/test/features/auth/domain/usecases/sign_up_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:taskly/features/auth/data/datasources/auth_remote_datasource.dart'
    as _i2;
import 'package:taskly/features/auth/data/repositories/auth_repository_impl.dart'
    as _i4;
import 'package:taskly/features/auth/domain/entities/auth_user_entity.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthRemoteDataSource_0 extends _i1.SmartFake
    implements _i2.AuthRemoteDataSource {
  _FakeAuthRemoteDataSource_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthUserEntity_1 extends _i1.SmartFake
    implements _i3.AuthUserEntity {
  _FakeAuthUserEntity_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepositoryImpl extends _i1.Mock
    implements _i4.AuthRepositoryImpl {
  @override
  _i2.AuthRemoteDataSource get remoteDataSource =>
      (super.noSuchMethod(
            Invocation.getter(#remoteDataSource),
            returnValue: _FakeAuthRemoteDataSource_0(
              this,
              Invocation.getter(#remoteDataSource),
            ),
            returnValueForMissingStub: _FakeAuthRemoteDataSource_0(
              this,
              Invocation.getter(#remoteDataSource),
            ),
          )
          as _i2.AuthRemoteDataSource);

  @override
  _i5.Stream<_i3.AuthUserEntity?> get authUser =>
      (super.noSuchMethod(
            Invocation.getter(#authUser),
            returnValue: _i5.Stream<_i3.AuthUserEntity?>.empty(),
            returnValueForMissingStub: _i5.Stream<_i3.AuthUserEntity?>.empty(),
          )
          as _i5.Stream<_i3.AuthUserEntity?>);

  @override
  _i5.Future<_i3.AuthUserEntity> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i5.Future<_i3.AuthUserEntity>.value(
              _FakeAuthUserEntity_1(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.AuthUserEntity>.value(
              _FakeAuthUserEntity_1(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.AuthUserEntity>);

  @override
  _i5.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.AuthUserEntity> signUpWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUpWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i5.Future<_i3.AuthUserEntity>.value(
              _FakeAuthUserEntity_1(
                this,
                Invocation.method(#signUpWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.AuthUserEntity>.value(
              _FakeAuthUserEntity_1(
                this,
                Invocation.method(#signUpWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.AuthUserEntity>);

  @override
  _i5.Future<_i3.AuthUserEntity> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i5.Future<_i3.AuthUserEntity>.value(
              _FakeAuthUserEntity_1(
                this,
                Invocation.method(#signInWithGoogle, []),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.AuthUserEntity>.value(
              _FakeAuthUserEntity_1(
                this,
                Invocation.method(#signInWithGoogle, []),
              ),
            ),
          )
          as _i5.Future<_i3.AuthUserEntity>);

  @override
  _i5.Future<void> sendResetPasswordEmail({required String? email}) =>
      (super.noSuchMethod(
            Invocation.method(#sendResetPasswordEmail, [], {#email: email}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
